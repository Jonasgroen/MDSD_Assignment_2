/**
 * generated by Xtext 2.25.0
 */
package dk.sdu.mmmi.mdsd.generator;

import dk.sdu.mmmi.mdsd.math.Exp;
import dk.sdu.mmmi.mdsd.math.Model;
import java.util.HashMap;
import java.util.Map;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class MathGenerator /* implements AbstractGenerator  */{
  private static Map<String, Integer> variables = new HashMap<String, Integer>();
  
  public void doGenerate(final /* Resource */Object resource, final /* IFileSystemAccess2 */Object fsa, final /* IGeneratorContext */Object context) {
    throw new Error("Unresolved compilation problems:"
      + "\nallContents cannot be resolved"
      + "\nfilter cannot be resolved"
      + "\nnext cannot be resolved"
      + "\ncompute cannot be resolved"
      + "\ndisplayPanel cannot be resolved");
  }
  
  public static Map<String, Integer> compute(final Model math) {
    throw new Error("Unresolved compilation problems:"
      + "\nThe method or field items is undefined for the type Model"
      + "\n+ cannot be resolved."
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }
  
  public static int computeExp(final Exp exp) {
    throw new Error("Unresolved compilation problems:"
      + "\n== cannot be resolved."
      + "\n+ cannot be resolved."
      + "\n+ cannot be resolved."
      + "\n+ cannot be resolved."
      + "\n- cannot be resolved."
      + "\n== cannot be resolved."
      + "\n* cannot be resolved."
      + "\n== cannot be resolved."
      + "\n/ cannot be resolved."
      + "\n+ cannot be resolved.");
  }
  
  public static int computePrim(final dk.sdu.mmmi.mdsd.math.Number factor) {
    return factor.getValue();
  }
  
  public void displayPanel(final Map<String, Integer> result) {
    throw new Error("Unresolved compilation problems:"
      + "\n+= cannot be resolved."
      + "\n+ cannot be resolved."
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved"
      + "\n+ cannot be resolved");
  }
}
